name: Terraform Module Release

on:
  push:
    branches:
      - main

permissions:
  contents: write
  id-token: write

env:
  GITHUB_TOKEN: ${{ secrets.GH_PAT }}

jobs:
  release:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        module: [ec2, s3]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y jq zip
          npm install semver

      - name: Determine bump type from merged branch
        id: bump_type
        run: |
          MERGED_BRANCH=$(git log -1 --pretty=%B | grep -oE 'Merge pull request #[0-9]+ from .+/(.+)' | cut -d/ -f2-)
          echo "Merged branch: $MERGED_BRANCH"

          if [[ "$MERGED_BRANCH" == feature/* ]]; then
            echo "bump_type=minor" >> $GITHUB_OUTPUT
          elif [[ "$MERGED_BRANCH" == fix/* ]]; then
            echo "bump_type=patch" >> $GITHUB_OUTPUT
          elif [[ "$MERGED_BRANCH" == breaking/* ]]; then
            echo "bump_type=major" >> $GITHUB_OUTPUT
          else
            echo "bump_type=patch" >> $GITHUB_OUTPUT
          fi

      - name: Bump version and tag
        run: |
          set -e
          MODULE=${{ matrix.module }}
          BUMP_TYPE=${{ steps.bump_type.outputs.bump_type }}

          echo "Releasing $MODULE module with bump type: $BUMP_TYPE"
          cd modules/$MODULE

          CURRENT=$(jq -r .version package.json)
          echo "Current version: $CURRENT"

          NEXT=$(npx semver "$CURRENT" -i "$BUMP_TYPE")
          echo "Next version: $NEXT"

          jq ".version = \"$NEXT\"" package.json > tmp && mv tmp package.json

          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git commit -am "chore($MODULE): release v$NEXT"
          git tag "${MODULE}-v$NEXT"

          git remote set-url origin https://x-access-token:${{ secrets.GH_PAT }}@github.com/${{ github.repository }}
          git push origin HEAD
          git push origin "${MODULE}-v$NEXT"

          echo "RELEASE_VERSION=$NEXT" >> $GITHUB_ENV

      - name: Create versioned artifact
        run: |
          MODULE=${{ matrix.module }}
          VERSION=${{ env.RELEASE_VERSION }}
          ZIP_NAME="${MODULE}-v${VERSION}.zip"

          echo "Creating artifact $ZIP_NAME"

          cd modules/$MODULE
          zip -r "../../$ZIP_NAME" .

      - name: Upload versioned artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.module }}-v${{ env.RELEASE_VERSION }}
          path: ${{ matrix.module }}-v${{ env.RELEASE_VERSION }}.zip

      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v2.3.2
        with:
          tag_name: ${{ matrix.module }}-v${{ env.RELEASE_VERSION }}
          name: "${{ matrix.module }} module v${{ env.RELEASE_VERSION }}"
          files: ${{ matrix.module }}-v${{ env.RELEASE_VERSION }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}


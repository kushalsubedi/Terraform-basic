name: Terraform Module Release Conditional Sequential

on:
  push:
    branches:
      - main

permissions:
  contents: write
  id-token: write

env:
  GITHUB_TOKEN: ${{ secrets.GH_PAT }}

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      ec2: ${{ steps.filter.outputs.ec2 }}
      s3: ${{ steps.filter.outputs.s3 }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            ec2:
              - 'modules/ec2/**'
            s3:
              - 'modules/s3/**'

  release-ec2:
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.ec2 == 'true'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y jq zip
          npm install semver

      - name: Release EC2 module
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
          REPO: ${{ github.repository }}
        run: |
          # Determine bump type from merged branch
          MERGED_BRANCH=$(git log -1 --pretty=%B | grep -oE 'Merge pull request #[0-9]+ from .+/(.+)' | cut -d/ -f2-)
          echo "Merged branch: $MERGED_BRANCH"

          if [[ "$MERGED_BRANCH" == feature/* ]]; then
            BUMP_TYPE="minor"
          elif [[ "$MERGED_BRANCH" == fix/* ]]; then
            BUMP_TYPE="patch"
          elif [[ "$MERGED_BRANCH" == breaking/* ]]; then
            BUMP_TYPE="major"
          else
            BUMP_TYPE="patch"
          fi

          MODULE=ec2
          echo "Releasing $MODULE module with bump type: $BUMP_TYPE"
          cd modules/$MODULE

          CURRENT=$(jq -r .version package.json)
          echo "Current version: $CURRENT"

          NEXT=$(npx semver "$CURRENT" -i "$BUMP_TYPE")
          echo "Next version: $NEXT"

          jq ".version = \"$NEXT\"" package.json > tmp && mv tmp package.json

          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git commit -am "chore($MODULE): release v$NEXT"
          git tag "${MODULE}-v$NEXT"

          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${REPO}
          git push origin HEAD
          git push origin "${MODULE}-v$NEXT"

          ZIP_NAME="${MODULE}-v${NEXT}.zip"
          zip -r "../../$ZIP_NAME" .

          cd ../..

          # Optional: upload artifact or create GitHub release here
          echo "Released $MODULE version $NEXT"

  release-s3:
    runs-on: ubuntu-latest
    needs: [detect-changes, release-ec2]
    if: needs.detect-changes.outputs.s3 == 'true'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y jq zip
          npm install semver

      - name: Release S3 module
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
          REPO: ${{ github.repository }}
        run: |
          MERGED_BRANCH=$(git log -1 --pretty=%B | grep -oE 'Merge pull request #[0-9]+ from .+/(.+)' | cut -d/ -f2-)
          echo "Merged branch: $MERGED_BRANCH"

          if [[ "$MERGED_BRANCH" == feature/* ]]; then
            BUMP_TYPE="minor"
          elif [[ "$MERGED_BRANCH" == fix/* ]]; then
            BUMP_TYPE="patch"
          elif [[ "$MERGED_BRANCH" == breaking/* ]]; then
            BUMP_TYPE="major"
          else
            BUMP_TYPE="patch"
          fi

          MODULE=s3
          echo "Releasing $MODULE module with bump type: $BUMP_TYPE"
          cd modules/$MODULE

          CURRENT=$(jq -r .version package.json)
          echo "Current version: $CURRENT"

          NEXT=$(npx semver "$CURRENT" -i "$BUMP_TYPE")
          echo "Next version: $NEXT"

          jq ".version = \"$NEXT\"" package.json > tmp && mv tmp package.json

          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git commit -am "chore($MODULE): release v$NEXT"
          git tag "${MODULE}-v$NEXT"

          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${REPO}
          git push origin HEAD
          git push origin "${MODULE}-v$NEXT"

          ZIP_NAME="${MODULE}-v${NEXT}.zip"
          zip -r "../../$ZIP_NAME" .

          cd ../..

          # Optional: upload artifact or create GitHub release here
          echo "Released $MODULE version $NEXT"

